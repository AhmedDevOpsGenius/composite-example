name: 'Build & Push Image'
description: 'Build and push Docker image to ACR'

inputs:
  environment:
    description: 'Deployment Environment'
    type: string
    default: 'development'

  dockerfile_path:
    description: 'Path to Dockerfile'
    type: string
    required: true

  docker_context:
    description: 'Docker context for build'
    type: string
    required: true

  image_name:
    description: 'Name of the image to build'
    type: string
    required: true

  image_tag:
    description: 'Tag of the image to build'
    type: string
    required: true

  acr_build_platform:
    description: 'Platform for ACR build step'
    type: string
    required: true

  build_configuration:
    description: 'Build Configuration (Debug or Release)'
    type: string
    required: true

  build_version_prefix:
    description: 'Short 3-part version (e.g., <major>.<minor>.<patch>)'
    type: string
    required: true

  build_version:
    description: 'SemVer version without trailing metadata'
    type: string
    required: true

  build_assembly_file_version:
    description: '4-part version (e.g., <major>.<minor>.<patch>.<ci_build_counter>)'
    type: string
    required: true

  build_full_version:
    description: 'Full SemVer version including trailing metadata'
    type: string
    required: true

runs:
  using: 'composite'
  steps:
    - run: echo "Deployment Environment: ${{ inputs.environment }}"
    - run: echo "Path to Dockerfile: ${{ inputs.dockerfile_path }}"
    - run: echo "Docker context for build: ${{ inputs.docker_context }}"
    - run: echo "Image Name: ${{ inputs.image_name }}"
    - run: echo "Image Tag: ${{ inputs.image_tag }}"
    - run: echo "ACR Build Platform: ${{ inputs.acr_build_platform }}"
    - run: echo "Build Configuration: ${{ inputs.build_configuration }}"
    - run: echo "Build Version Prefix: ${{ inputs.build_version_prefix }}"
    - run: echo "Build Version: ${{ inputs.build_version }}"
    - run: echo "Build Assembly File Version: ${{ inputs.build_assembly_file_version }}"
    - run: echo "Build Full Version: ${{ inputs.build_full_version }}"
    - run: |
        az acr build \
        --platform ${{ inputs.acr_build_platform }} \
        --image ${{ inputs.image_name }}:${{ inputs.image_tag }} \
        --registry ${{ secrets.ACR_NAME }} \
        --resource-group ${{ secrets.ACR_RESOURCE_GROUP }} \
        --file ${{ inputs.dockerfile_path }} ${{ inputs.docker_context }} \
        --build-arg Configuration="${{ inputs.build_configuration }}" \
        --build-arg VersionPrefix="${{ inputs.build_version_prefix }}" \
        --build-arg Version="${{ inputs.build_version }}" \
        --build-arg AssemblyFileVersion="${{ inputs.build_assembly_file_version }}" \
        --build-arg FullVersion="${{ inputs.build_full_version }}"
